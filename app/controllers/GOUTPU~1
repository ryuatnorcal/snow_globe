
class PlacesController < ApplicationController
  # GET /places
  # GET /places.json
  def index
    @places = Place.all

    respond_to do |format|
      format.html # index.html.erb
      format.json { render json: @places }
    end
  end

  # GET /places/1
  # GET /places/1.json
  def show
    @place = Place.find(params[:id])
#    if params[:comp]
#    	Place.find(:all, :condition=>[":place_id=?",page_id])
		@near_user = Place.near(params[:place_id], 100,:conditions=>[":categories=?","resort"], :order => :distance)
#	end
    respond_to do |format|
      format.html # show.html.erb
      format.json { render json: @place }
    end
  end

  # GET /places/new
  # GET /places/new.json
  def new
    @place = Place.new

    respond_to do |format|
      format.html # new.html.erb
      format.json { render json: @place }
    end
  end

  # GET /places/1/edit
  def edit
    @place = Place.find(params[:id])
  end

  # POST /places
  # POST /places.json
  def create
    
    @place = Place.new(params[:place])
    @place.place_id = @place.id
    respond_to do |format|
      if @place.save
        format.html { redirect_to place_path(@place.id), notice: 'Place was successfully created.' }
        format.json { render json: place_path(@place.id), status: :created, location: @place }
      else
        format.html { render action: "new" }
        format.json { render json: @place.errors, status: :unprocessable_entity }
      end
    end
  end

  # PUT /places/1
  # PUT /places/1.json
  def update
    @place = Place.find(params[:id])

    respond_to do |format|
      if @place.update_attributes(params[:place])
        format.html { redirect_to place_path(@place.id), notice: 'Place was successfully updated.' }
        format.json { head :no_content }
      else
        format.html { render action: "edit" }
        format.json { render json: @place.errors, status: :unprocessable_entity }
      end
    end
  end

  # DELETE /places/1
  # DELETE /places/1.json
  def destroy
    @place = Place.find(params[:id])
    @place.destroy

    respond_to do |format|
      format.html { redirect_to request.referer }
      format.json { head :no_content }
    end
  end

  def _comp
  	#if params[:search].present?
  	#	@user_near = Place.near(params[:search], 100,:locals=>[":categories=?","resort"], :order => :distance)
  	#else
  		@user_near = Place.find(params[:id])
	#end
  end  
  
  #http://stackoverflow.com/questions/1234108/how-to-make-dynamic-multi-dimensional-array-in-ruby
  # the link has how to create multi dimentional array in rails 	
  #def comp_array
  
  	#@jibs = {}
  	#@place.find(:all, :condition=>[":title=?"@place.title]).each do |row|
  	
  #end
end
